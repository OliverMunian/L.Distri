var mongoose = require("mongoose");

const announceSchemaMongo = new mongoose.Schema({
  brand: { type: String, required: true },
  model: { type: String, required: true },
  informations: {
    serialNumber: { type: String, required: true },
    dateCirculation: { type: String, required: true }, // string si tu stockes une date ISO
    carBody: { type: String },
    type: { type: String, required: true },
    horsePower: { type: String },
    year: { type: Number, required: true },
    kms: { type: Number, required: true },
    price: { type: Number, required: true },
    gearbox: { type: String },
    motorization: { type: String },
    co2Emissions: { type: Number },
    emissionsClass: { type: Number },
    numberDoors: { type: Number },
    places: { type: Number },
    ptc: { type: Number },
    ptr: { type: Number },
    payload: { type: Number },
    dimensions: {
      length: { type: Number },
      width: { type: Number },
      height: { type: Number },
      volume: { type: Number },
      wheelBase: { type: Number },
    },
    color: { type: String },
    description: { type: String },
  },
  features: {
    interior: {
      airConditioning: { type: Boolean },
      automaticAirConditioning: { type: Boolean },
      electricWindows: { type: Boolean },
      electricRearviewMirrors: { type: Boolean },
      bluetooth: { type: Boolean },
      carplay: { type: Boolean },
      cruiseControl: { type: Boolean },
      speedLimiter: { type: Boolean },
      cruiseLimiter: { type: Boolean },
      onboardComputer: { type: Boolean },
      steeringWheelControls: { type: Boolean },
      usb12vSocket: { type: Boolean },
      frontBench: { type: Boolean },
      partition: { type: Boolean },
      reinforcedUpholstery: { type: Boolean },
      suspendedSeat: { type: Boolean },
      heatedSeat: { type: Boolean },
      gps: { type: Boolean },
      digitalDashboard: { type: Boolean },
      sleeperCab: { type: Boolean },
      radio: { type: Boolean },
    },
    exterior: {
      slidingSideDoor: { type: Boolean },
      doubleRearDoor: { type: Boolean },
      parkingSensors: { type: Boolean },
      rearCamera: { type: Boolean },
      roofBars: { type: Boolean },
      towHook: { type: Boolean },
      fogLights: { type: Boolean },
      alloyWheels: { type: Boolean },
      aluminumWheels: { type: Boolean },
      reinforcedSuspension: { type: Boolean },
      tippingBed: { type: Boolean },
      crane: { type: Boolean },
      trailerHitch: { type: Boolean },
      aluminumSideboards: { type: Boolean },
      workLights: { type: Boolean },
      flatbedWithSideboards: { type: Boolean },
      winch: { type: Boolean },
      tarpaulin: { type: Boolean },
      roofSpoiler: { type: Boolean },
      beacon: { type: Boolean },
      hydraulicOutlet: { type: Boolean },
      trailerHitchRear: { type: Boolean },
    },
  },
  images: [{ type: String, required: true }],
});

const Announce = mongoose.model("announce", announceSchemaMongo);

module.exports = Announce;
